name: Publish Docker image and Update README

on:
  push:
    branches:
      - main
      - test
  schedule:
    - cron: '0 1 1 * *' # Runs at 01:00 UTC on the 1st day of every month

jobs:
  build_and_push:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.ORG_DOCKERHUB_USER }}
          password: ${{ secrets.ORG_DOCKERHUB_KEY }}
      
      - name: Get the current date
        id: current_date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            techlotse/codestream-cloudcli:${{ steps.current_date.outputs.date }}
            techlotse/codestream-cloudcli:latest

  update_readme:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Fetch tool versions
        id: tool_versions
        run: |
          AWS_CLI_VERSION=$(docker run techlotse/codestream-cloudcli:latest aws --version | cut -d/ -f2 | cut -d " " -f1)
          PACKER_VERSION=$(docker run techlotse/codestream-cloudcli:latest packer --version)
          ANSIBLE_VERSION=$(docker run techlotse/codestream-cloudcli:latest ansible --version | head -n1 | cut -d " " -f2)
          AZURE_CLI_VERSION=$(docker run techlotse/codestream-cloudcli:latest az --version | grep 'azure-cli' | cut -d " " -f2)
          TERRAFORM_VERSION=$(docker run techlotse/codestream-cloudcli:latest terraform version | head -n1 | awk '{print $2}' | cut -d"v" -f2)
          DOCKER_IMAGE_VERSION=$(docker inspect --format='{{index .RepoDigests 0}}' techlotse/codestream-cloudcli:latest)
          echo "::set-output name=AWS_CLI_VERSION::$AWS_CLI_VERSION"
          echo "::set-output name=PACKER_VERSION::$PACKER_VERSION"
          echo "::set-output name=ANSIBLE_VERSION::$ANSIBLE_VERSION"
          echo "::set-output name=AZURE_CLI_VERSION::$AZURE_CLI_VERSION"
          echo "::set-output name=TERRAFORM_VERSION::$TERRAFORM_VERSION"
          echo "::set-output name=DOCKER_IMAGE_VERSION::$DOCKER_IMAGE_VERSION"

      - name: Update README
        run: |
          sed -i "s|AWS CLI version: .*|AWS CLI version: ${{ steps.tool_versions.outputs.AWS_CLI_VERSION }}|" README.md
          sed -i "s|Packer version: .*|Packer version: ${{ steps.tool_versions.outputs.PACKER_VERSION }}|" README.md
          sed -i "s|Ansible version: .*|Ansible version: ${{ steps.tool_versions.outputs.ANSIBLE_VERSION }}|" README.md
          sed -i "s|Azure CLI version: .*|Azure CLI version: ${{ steps.tool_versions.outputs.AZURE_CLI_VERSION }}|" README.md
          sed -i "s|Terraform version: .*|Terraform version: ${{ steps.tool_versions.outputs.TERRAFORM_VERSION }}|" README.md
          sed -i "s|Docker image version: .*|Docker image version: ${{ steps.tool_versions.outputs.DOCKER_IMAGE_VERSION }}|" README.md
          git config --global user.email "info@techlotse.io"
          git config --global user.name "GitHub Actions"
          git add README.md
          git commit -m "Updated README with latest tool versions and Docker image version" || exit 0 # Exit gracefully if no changes
          git push
